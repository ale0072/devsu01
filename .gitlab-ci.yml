stages:
  - test
  - build
  - deploy

include:
- template: Security/SAST.gitlab-ci.yml
- template: Jobs/Dependency-Scanning.gitlab-ci.yml 

variables:
  IMAGE_NAME: devsu/test-example01
  IMAGE_TAG: python-app-1.0
  GKE_CLUSTER_NAME: $GKE_CLUSTER_NAME
  GKE_PROJECT_ID: $GKE_PROJECT_ID
  GKE_ZONE: $GKE_ZONE
  KUBE_NAMESPACE: $KUBE_NAMESPACE

run_tests:
  stage: test
  image: python:3.11-bullseye
  before_script:
    - pip install -r requirements.txt
  script:
    - python manage.py test

build_image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  before_script:
    - echo $GCLOUD_KEY | base64 -d > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_ZONE --project $GKE_PROJECT_ID
    - kubectl config set-context $(kubectl config current-context) --namespace=$KUBE_NAMESPACE
  script:
    - kubectl apply -f kubernetes-deployment.yml
